<div class="user">
  <h2 data-label="title">{{user}}</h2>
  
  <h3>
    <a href="https://open.spotify.com/user/{{user}}" data-label="open-spotify">
      <span class="light">https://open.spotify.com/user/{{user}}</span></a>
  </h3>

  <span class="opacity-75">
    <span data-inject-api="total"></span>
    <span>playlists</span>
  </span>

  <div id="items">

    <div class="card" id="playlist-template" data-index="-1">
      <div class="flex">
        <div class="image">
          <a href="" data-api="external_urls.spotify" data-label="href" target="_blank">
            <img data-api="images[0].url" data-label="src" width="90px" height="90px">
          </a>
        </div>
        <div class="container">
          <h3 class="playlist-name">
            <a href="" data-api="external_urls.spotify" data-label="href" target="_blank">
              <span data-api="name"></span>
            </a>
            <small>by <span data-api="owner.display_name"></span></small>
          </h3>

          <div data-api="description"></div>
          <small class="light opacity-75 hover">
            <span>Tracks: </span>
            <span data-api="tracks.total"></span>
          </small>
        </div>
      </div>
      <label data-api="id" class="opacity-50"></label>
      <div class="output flex">
        <button value="" data-api="id" data-label="value" onclick="getTracksApi(value)">view tracks</button>
        <div class="track"></div>
      </div>
    </div>
    
  </div>

  <small>
    <strong>last fetched: </strong>
    <span data-inject-api="fetched"></span>
  </small>

  <style>
    .output button{
      font-size:.8em;
      border-radius:0;
      color:var(--dark);
      background:rgba(255,255,255,.7);
    }
  </style>

  <script src="/client.js"></script>
  <script>
    function query(params) {
      return (
        '?' +
        Object.entries(params)
          .map(e => `${e[0]}=${e[1]}`)
          .join('&')
      )
    }

    function getTracksApi(id) {
      fetch(`/api/playlist/${id}/tracks`)
        .then(data => data.json())
        .then(d => makePopChart(id, d.items))
    }

    function makePopChart(id, dat) {
      let output = document.querySelector(`button[value="${id}"]`).parentElement
      output.style.cssText = 'display:flex;flex-direction:column'
      let parent = $make('table')
      var pop = []

      let maxPop = Math.max(...dat.map(e=>e.track.popularity))
      
      dat.forEach((e, i) => {
        const row = $make('tr')
        const cols = [
          i + 1,
          new Date(e.added_at).toLocaleDateString(),
          e.track.name,
          e.track.artists.map(e => e.name).join(' & '),
          e.track.popularity
        ]
        cols.forEach(e => {
          row.appendChild(Object.assign($make('td'), {
            textContent: e,
            style: `${String(e).length < 15 ? 'white-space:pre' : ''}`
          }))
        })
        pop.push(cols)
        parent.appendChild(row)
      })

      var div = Object.assign($make('div'), {
        className: 'chart',
        style: `max-height:${maxPop*2}px`
      })

      pop.sort((a, b) => a[4] - b[4]).forEach(p => {
        var bar = Object.assign($make('div'), {
          style: `height: ${p[4]*2}px;`,
          className: 'bar',
        })

        bar.dataset.pop = `${p[4]}%`
        var tooltip = Object.assign($make('div'), {
          textContent: `${p[2]} by ${p[3]}`,
          className: 'tooltip'
        })
        bar.appendChild(tooltip)
        div.appendChild(bar)
      })

      output.appendChild(div)
      document.querySelector(`#playlist-${id} .output button`).remove()
    }
  </script>
  <style id="tracks-chart">
  .chart {
    display: flex;
    width: 100%;
    height: 200px;
    align-items: flex-end;
  }
  .bar {
    width: 100%;
    flex-grow: 1;
    border: 1px solid var(--card-bg);
  }

  .tooltip {
    visibility: hidden;
    position: absolute;
  }

  .bar:hover {
    background: black;
  }

  .bar:hover:before {
    content: attr(data-pop);
    position: absolute;
    transform: translateY(-35px);
    white-space: pre;
    z-index: 1000;
  }

  .bar {
    background: white;
    width: 100%;
    display: flex;
    align-content: flex-end;
    min-height: 4px!important;
  }

  .chart {
    position: relative;
    width: 100%;
    margin-bottom: 1rem;
  }

  .bar:hover .tooltip {
    left: 0;
    top: 0;
    width: 100%;
    visibility: visible;
    color: white;
  }

  .chart:before {
    content: "song popularity";
    width: 100%;
    white-space: pre;
    position: absolute;
    bottom: 0;
    margin-bottom: -25px;
    text-transform: uppercase;
    font-size: 11px;
  }
  </style>

</div>